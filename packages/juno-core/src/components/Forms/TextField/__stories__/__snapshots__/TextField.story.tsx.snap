// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots ðŸš€ Cleanup Components/Forms/TextField TextField 1`] = `
Array [
  .c0 {
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: #121212;
}

.c1 {
  font-family: Lato,Helvetica,Arial,sans-serif;
}

.c2.highlight-term {
  color: #121212 !important;
  background-color: #FFDFB1 !important;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<p
    className="MuiTypography-root c0"
    data-color="neutral.f06"
    data-variant="body1"
  >
    If you want TextField with margin at bottom, set
     
    <span
      className="MuiTypography-root c1 c2 highlight-term MuiTypography-noWrap"
      data-color="initial"
      data-variant="inherit"
      title="gutterBottom"
    >
      gutterBottom
    </span>
     to be
     
    <span
      className="MuiTypography-root c1 c2 highlight-term MuiTypography-noWrap"
      data-color="initial"
      data-variant="inherit"
      title="true"
    >
      true
    </span>
  </p>,
  .c0 {
  font-size: 1.5rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 32px;
  color: #121212;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<h5
    className="MuiTypography-root c0 MuiTypography-paragraph MuiTypography-displayBlock"
    data-color="neutral.f06"
    data-variant="headline1"
  >
    Control
  </h5>,
  .c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c0 {
  width: 168px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="control"
      id="control-label"
    >
      Topic
    </label>
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
    >
      <input
        aria-describedby="control-helper-text"
        aria-invalid={false}
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        id="control"
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="Placeholder"
        required={false}
        type="text"
        value=""
      />
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c3 c4 delete_circle icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
            />
          </svg>
          
        </span>
      </button>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
      id="control-helper-text"
    >
      some helper text
    </p>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  font-size: 1.5rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 32px;
  color: #121212;
}

.c1 {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c2.highlight-term {
  color: #121212 !important;
  background-color: #FFDFB1 !important;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<h5
    className="MuiTypography-root c0 MuiTypography-paragraph MuiTypography-displayBlock"
    data-color="neutral.f06"
    data-variant="headline1"
  >
    UnControl
    <span
      className="MuiTypography-root c1 c2 highlight-term MuiTypography-noWrap"
      data-color="initial"
      data-variant="subheading1"
      title="(if you want cleanBtn, make component to be controlled)"
    >
      (if you want cleanBtn, make component to be controlled)
    </span>
  </h5>,
  .c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c0 {
  width: 168px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
      htmlFor="id-textField-1"
      id="id-textField-1-label"
    >
      Topic
    </label>
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
    >
      <input
        aria-describedby="id-textField-1-helper-text"
        aria-invalid={false}
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch"
        disabled={false}
        id="id-textField-1"
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="Placeholder"
        required={false}
        type="search"
      />
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c3 c4 delete_circle icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
            />
          </svg>
          
        </span>
      </button>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
      id="id-textField-1-helper-text"
    >
      some helper text
    </p>
  </div>,
]
`;

exports[`Storyshots ðŸš€ Cleanup Components/Forms/TextField TextField Examples 1`] = `
Array [
  .c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c0 {
  width: 168px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c6 *:not(input) + .c1 {
  margin-left: 12px;
}

.c7 *:not(input) + .c1 {
  margin-left: 12px;
}

.c8 *:not(input) + .c1 {
  margin-left: 12px;
}

.c9 *:not(input) + .c1 {
  margin-left: 12px;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
    >
      Number
    </label>
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
    >
      <input
        aria-invalid={false}
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="what's your age?"
        required={false}
        type="number"
      />
      <button
        aria-describedby={null}
        aria-hidden={true}
        aria-label="clear"
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseOver={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        title="clear"
        type="button"
      >
        <span
          className="c3 c4 delete_circle icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
            />
          </svg>
          
        </span>
      </button>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
    >
      some helper text
    </p>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c6 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0 {
  width: 168px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c7 *:not(input) + .c1 {
  margin-left: 12px;
}

.c8 *:not(input) + .c1 {
  margin-left: 12px;
}

.c9 *:not(input) + .c1 {
  margin-left: 12px;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
    >
      Title
    </label>
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
    >
      <input
        aria-invalid={false}
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="what's your title?"
        required={false}
        type="text"
        value="Example"
      />
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c3 c4 delete_circle icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
            />
          </svg>
          
        </span>
      </button>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
    >
      some helper text
    </p>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c6 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0 {
  width: 168px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c7 *:not(input) + .c1 {
  margin-left: 12px;
}

.c8 *:not(input) + .c1 {
  margin-left: 12px;
}

.c9 *:not(input) + .c1 {
  margin-left: 12px;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
    >
      Password
    </label>
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
    >
      <input
        aria-invalid={false}
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="what's your password?"
        required={false}
        type="password"
        value="Example"
      />
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c3 c4 delete_circle icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
            />
          </svg>
          
        </span>
      </button>
      <button
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="c3 c4 hide_border icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M28.749 3.293a.999.999 0 010 1.414l-3.546 3.546C28.731 10.822 31 14.256 31 16c0 3-6.716 11-15 11-2.706 0-5.245-.854-7.437-2.108l-3.856 3.856a.999.999 0 11-1.414-1.414L27.335 3.292a.999.999 0 011.414 0zm-4.978 6.392l-2.862 2.863a6 6 0 01-8.36 8.36l-2.514 2.514C11.952 24.433 13.987 25 16 25c3.233 0 6.526-1.462 9.29-3.88 1.169-1.022 2.162-2.156 2.853-3.223.569-.878.857-1.609.857-1.897s-.289-1.019-.857-1.897c-.691-1.066-1.684-2.2-2.853-3.223a18.306 18.306 0 00-1.519-1.195zM16 5c2.201 0 4.292.565 6.176 1.451l-1.515 1.516c-1.523-.625-3.099-.966-4.661-.966-3.233 0-6.526 1.462-9.29 3.88-1.169 1.022-2.162 2.156-2.853 3.223-.568.878-.857 1.609-.857 1.897s.289 1.019.857 1.897c.691 1.066 1.684 2.2 2.853 3.223.142.125.286.247.432.366l-1.421 1.42C2.815 20.471 1 17.561 1 16.001c0-3 6.716-11 15-11zm3.462 8.995l-5.467 5.467a4 4 0 005.467-5.467zM16 10c.78 0 1.525.149 2.208.419l-1.624 1.623a4 4 0 00-4.542 4.542l-1.623 1.624A6 6 0 0116 10z"
            />
          </svg>
          
        </span>
      </button>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
    >
      some helper text
    </p>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c6 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0 {
  width: 168px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c7 *:not(input) + .c1 {
  margin-left: 12px;
}

.c8 *:not(input) + .c1 {
  margin-left: 12px;
}

.c9 *:not(input) + .c1 {
  margin-left: 12px;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink Mui-focused Mui-focused RcTextFieldInputLabel-focused"
      data-shrink={true}
    >
      Title
    </label>
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline Mui-focused Mui-focused RcTextFieldInput-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
    >
      <input
        aria-invalid={false}
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="what's your title?"
        required={false}
        type="text"
        value="Example"
      />
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c3 c4 delete_circle icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
            />
          </svg>
          
        </span>
      </button>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root Mui-focused"
    >
      some helper text
    </p>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c6 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0 {
  width: 168px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c7 *:not(input) + .c1 {
  margin-left: 12px;
}

.c8 *:not(input) + .c1 {
  margin-left: 12px;
}

.c9 *:not(input) + .c1 {
  margin-left: 12px;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink Mui-error Mui-error RcTextFieldInputLabel-error"
      data-shrink={true}
    >
      Title
    </label>
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline Mui-error Mui-error RcTextFieldInput-error MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
    >
      <input
        aria-invalid={true}
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="what's your title?"
        required={false}
        type="text"
        value="Example"
      />
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c3 c4 delete_circle icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
            />
          </svg>
          
        </span>
      </button>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root Mui-error RcTextFieldFormHelperText-error"
    >
      some helper text
    </p>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c6 *:not(input) + .c1 {
  margin-left: 12px;
}

.c7 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c8 *:not(input) + .c1 {
  margin-left: 12px;
}

.c9 *:not(input) + .c1 {
  margin-left: 12px;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 MuiFormControl-fullWidth"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink Mui-disabled Mui-disabled RcTextFieldInputLabel-disabled"
      data-shrink={true}
    >
      Title
    </label>
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline Mui-disabled Mui-disabled RcTextFieldInput-disabled MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
    >
      <input
        aria-invalid={false}
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input Mui-disabled Mui-disabled RcTextFieldInput-disabled MuiInputBase-inputAdornedEnd"
        disabled={true}
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="what's your title?"
        required={false}
        type="text"
        value="Example"
      />
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c3 c4 delete_circle icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
            />
          </svg>
          
        </span>
      </button>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root Mui-disabled RcTextFieldFormHelperText-disabled"
    >
      some helper text
    </p>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c6 *:not(input) + .c1 {
  margin-left: 12px;
}

.c7 *:not(input) + .c1 {
  margin-left: 12px;
}

.c8 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0 {
  width: 168px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #F6AD16;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #F6AD16;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #F6AD16;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #F6AD16;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c9 *:not(input) + .c1 {
  margin-left: 12px;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #F6AD16;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
      data-shrink={true}
    >
      Title
    </label>
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
    >
      <input
        aria-invalid={false}
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="what's your title?"
        required={false}
        type="text"
        value="Example"
      />
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c3 c4 delete_circle icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
            />
          </svg>
          
        </span>
      </button>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
    >
      some helper text
    </p>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c6 *:not(input) + .c1 {
  margin-left: 12px;
}

.c7 *:not(input) + .c1 {
  margin-left: 12px;
}

.c8 *:not(input) + .c1 {
  margin-left: 12px;
}

.c9 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0 {
  width: 168px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #46BE59;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #46BE59;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #46BE59;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #46BE59;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #46BE59;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0"
  >
    <label
      className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink Mui-focused Mui-focused RcTextFieldInputLabel-focused"
      data-shrink={true}
    >
      Title
    </label>
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline Mui-focused Mui-focused RcTextFieldInput-focused MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
      onClick={[Function]}
    >
      <input
        aria-invalid={false}
        autoFocus={false}
        className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd"
        disabled={false}
        onAnimationStart={[Function]}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        placeholder="what's your title?"
        required={false}
        type="text"
        value="Example"
      />
      <button
        aria-hidden={true}
        className="MuiButtonBase-root c1 c2 RcIconButton-root"
        disabled={false}
        onBlur={[Function]}
        onClick={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={-1}
        type="button"
      >
        <span
          className="c3 c4 delete_circle icon"
        >
          <svg
            className="c5"
            viewBox="0 0 32 32"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
            />
          </svg>
          
        </span>
      </button>
    </div>
    <p
      className="MuiFormHelperText-root RcTextFieldFormHelperText-root Mui-focused"
    >
      some helper text
    </p>
  </div>,
]
`;

exports[`Storyshots ðŸš€ Cleanup Components/Forms/TextField TextField with align 1`] = `
.c5 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c2 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 20px;
  height: 20px;
  color: #666666;
  border-radius: 50%;
  -webkit-transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  transition: background 150ms cubic-bezier(0.4,0,0.2,1) 0ms;
  cursor: pointer;
}

.c2,
.c2 .c3 {
  font-size: 20px;
}

.c2:active,
.c2:active .c3 {
  color: #666666;
}

.c2.focus-visible,
.c2[data-focus-visible-added] {
  background-color: transparent;
}

.c2.focus-visible:active,
.c2[data-focus-visible-added]:active,
.c2.focus-visible:active .c3,
.c2[data-focus-visible-added]:active .c3 {
  color: rgba(102,102,102,0.88);
}

.c2.focus-visible:after,
.c2[data-focus-visible-added]:after {
  content: '';
  position: absolute;
  top: -4px;
  right: -4px;
  bottom: -4px;
  left: -4px;
  box-shadow: 0 0 0 1px #066FAC;
  border-radius: 50%;
  pointer-events: none;
  z-index: 1;
}

.c2.RcIconButton-persistBg {
  background-color: rgba(102,102,102,0.12);
}

.c2.RcIconButton-disabled,
.c2.RcIconButton-disabled .c3 {
  color: #B9B9B9;
}

.c2.RcIconButton-invisible {
  opacity: 0;
  visibility: hidden;
  width: 0;
  height: 0;
}

.c2.RcIconButton-outline {
  border: 1px solid #C7C7C7;
}

.c2.RcIconButton-contained {
  color: #fff;
  background-color: #666666;
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added] {
  background-color: rgba(102,102,102,0.84);
}

.c2.RcIconButton-contained.focus-visible,
.c2.RcIconButton-contained[data-focus-visible-added],
.c2.RcIconButton-contained.focus-visible .c3,
.c2.RcIconButton-contained[data-focus-visible-added] .c3 {
  color: #fff;
}

.c2.RcIconButton-contained:active {
  background-color: rgba(102,102,102,0.76);
}

.c2.RcIconButton-contained:active,
.c2.RcIconButton-contained:active .c3 {
  color: #fff;
}

.c2 .RcIconButtonTouchRipple-ripplePulsate {
  border-radius: 0;
  -webkit-animation-name: none;
  animation-name: none;
  opacity: 0;
}

.c0 {
  width: 168px;
}

.c0 *:not(input) + .c1 {
  margin-left: 12px;
}

.c0.RcTextField-root {
  margin: 0 0 16px 0;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c6 {
  width: 168px;
}

.c6 *:not(input) + .c1 {
  margin-left: 12px;
}

.c6.RcTextField-root {
  margin: 0 0 16px 0;
}

.c6 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c6 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c6 .RcTextFieldInput-root {
  color: #121212;
}

.c6 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
  text-align: center;
  width: calc(100% - 20px);
}

.c6 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c6 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c6 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c6 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c6 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c6 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c6 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c6 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c6 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c6 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c6 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c6 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c6 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c6 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c6 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c6 .RcTextFieldFormHelperText-error,
.c6 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c6 .RcTextFieldFormHelperText-disabled,
.c6 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c6 input[type='search']::-ms-clear,
.c6 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c6 input[type='search']::-webkit-search-decoration,
.c6 input[type='search']::-webkit-search-cancel-button,
.c6 input[type='search']::-webkit-search-results-button,
.c6 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c7 {
  width: 168px;
}

.c7 *:not(input) + .c1 {
  margin-left: 12px;
}

.c7.RcTextField-root {
  margin: 0 0 16px 0;
}

.c7 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c7 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c7 .RcTextFieldInput-root {
  color: #121212;
}

.c7 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
  text-align: right;
  width: calc(100% - 20px);
}

.c7 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c7 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c7 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c7 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c7 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c7 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c7 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c7 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c7 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c7 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c7 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c7 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c7 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c7 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c7 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c7 .RcTextFieldFormHelperText-error,
.c7 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c7 .RcTextFieldFormHelperText-disabled,
.c7 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c7 input[type='search']::-ms-clear,
.c7 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c7 input[type='search']::-webkit-search-decoration,
.c7 input[type='search']::-webkit-search-cancel-button,
.c7 input[type='search']::-webkit-search-results-button,
.c7 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c8 {
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: #121212;
}

@media (hover:hover) and (pointer:fine) {
  .c2:hover {
    background-color: transparent;
  }

  .c2:hover,
  .c2:hover .c3 {
    color: rgba(102,102,102,0.88);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c2.RcIconButton-contained:hover {
    background-color: rgba(102,102,102,0.92);
  }

  .c2.RcIconButton-contained:hover,
  .c2.RcIconButton-contained:hover .c3 {
    color: #fff;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c6 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c7 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
  className="MuiGrid-root MuiGrid-container"
>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-6"
  >
    <div
      className="MuiFormControl-root MuiTextField-root RcTextField-root c0"
    >
      <label
        className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
        data-shrink={true}
        htmlFor="id-TextFieldWithAlign-1"
        id="id-TextFieldWithAlign-1-label"
      >
        Topic
      </label>
      <div
        className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
        onClick={[Function]}
      >
        <input
          aria-describedby="id-TextFieldWithAlign-1-helper-text"
          aria-invalid={false}
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch"
          disabled={false}
          id="id-TextFieldWithAlign-1"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Placeholder"
          required={false}
          type="search"
          value="text align"
        />
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c1 c2 RcIconButton-root"
          disabled={false}
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c3 c4 delete_circle icon"
          >
            <svg
              className="c5"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
              />
            </svg>
            
          </span>
        </button>
      </div>
      <p
        className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
        id="id-TextFieldWithAlign-1-helper-text"
      >
        some helper text
      </p>
    </div>
    <br />
    <div
      className="MuiFormControl-root MuiTextField-root RcTextField-root c6"
    >
      <label
        className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
        data-shrink={true}
        htmlFor="id-TextFieldWithAlign-1"
        id="id-TextFieldWithAlign-1-label"
      >
        Topic
      </label>
      <div
        className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
        onClick={[Function]}
      >
        <input
          aria-describedby="id-TextFieldWithAlign-1-helper-text"
          aria-invalid={false}
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch"
          disabled={false}
          id="id-TextFieldWithAlign-1"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Placeholder"
          required={false}
          type="search"
          value="text align"
        />
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c1 c2 RcIconButton-root"
          disabled={false}
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c3 c4 delete_circle icon"
          >
            <svg
              className="c5"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
              />
            </svg>
            
          </span>
        </button>
      </div>
      <p
        className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
        id="id-TextFieldWithAlign-1-helper-text"
      >
        some helper text
      </p>
    </div>
    <br />
    <div
      className="MuiFormControl-root MuiTextField-root RcTextField-root c7"
    >
      <label
        className="MuiFormLabel-root MuiInputLabel-root RcTextFieldInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
        data-shrink={true}
        htmlFor="id-TextFieldWithAlign-1"
        id="id-TextFieldWithAlign-1-label"
      >
        Topic
      </label>
      <div
        className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInput-underline RcTextFieldInput-underline MuiInputBase-formControl MuiInput-formControl MuiInputBase-adornedEnd"
        onClick={[Function]}
      >
        <input
          aria-describedby="id-TextFieldWithAlign-1-helper-text"
          aria-invalid={false}
          autoFocus={false}
          className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputAdornedEnd MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch"
          disabled={false}
          id="id-TextFieldWithAlign-1"
          onAnimationStart={[Function]}
          onBlur={[Function]}
          onChange={[Function]}
          onFocus={[Function]}
          placeholder="Placeholder"
          required={false}
          type="search"
          value="text align"
        />
        <button
          aria-hidden={true}
          className="MuiButtonBase-root c1 c2 RcIconButton-root"
          disabled={false}
          onBlur={[Function]}
          onClick={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={-1}
          type="button"
        >
          <span
            className="c3 c4 delete_circle icon"
          >
            <svg
              className="c5"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16 2c7.732 0 14 6.268 14 14s-6.268 14-14 14S2 23.732 2 16 8.268 2 16 2zm-4.243 8.343a.999.999 0 00-1.497 1.32l.083.094 4.243 4.241-4.243 4.244a.999.999 0 001.32 1.497l.094-.083L16 17.412l4.243 4.244a.999.999 0 001.497-1.32l-.083-.094-4.243-4.244 4.243-4.241a.999.999 0 00-1.32-1.497l-.094.083L16 14.584l-4.243-4.241z"
              />
            </svg>
            
          </span>
        </button>
      </div>
      <p
        className="MuiFormHelperText-root RcTextFieldFormHelperText-root"
        id="id-TextFieldWithAlign-1-helper-text"
      >
        some helper text
      </p>
    </div>
  </div>
  <div
    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-6"
  >
    <p
      className="MuiTypography-root c8 MuiTypography-paragraph"
      data-color="neutral.f06"
      data-variant="body1"
    >
      Compare with native input
    </p>
    <input
      onChange={[Function]}
      type="search"
      value="text align"
    />
    <br />
    <br />
    <br />
    <br />
    <input
      onChange={[Function]}
      style={
        Object {
          "textAlign": "center",
        }
      }
      type="search"
      value="text align"
    />
    <br />
    <br />
    <br />
    <br />
    <input
      onChange={[Function]}
      style={
        Object {
          "textAlign": "right",
        }
      }
      type="search"
      value="text align"
    />
  </div>
</div>
`;
