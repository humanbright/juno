// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots ðŸš€ Cleanup Components/Selects/PlainSelect PlainSelect 1`] = `
.c7 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c4 {
  text-transform: none;
  font-size: 0.9375rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  min-width: 88px;
  min-height: 32px;
  padding: 0px 12px;
}

.c4 .RcButton-startIcon {
  margin-right: 8px;
}

.c4 .RcButton-endIcon {
  margin-left: 8px;
}

.c4.RcButton-text {
  color: #066FAC;
}

.c4.RcButton-text.RcButton-disabled {
  color: #B9B9B9;
}

.c4.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c4.RcButton-contained.RcButton-disabled {
  background-color: #B9B9B9;
  color: #FFFFFF;
}

.c4.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 11px;
}

.c4.RcButton-outlined.RcButton-disabled {
  color: #B9B9B9;
  border-color: #B9B9B9;
}

.c4.RcButton-outlined:after {
  top: -1px;
  bottom: -1px;
  left: -1px;
  right: -1px;
  border: 1px solid transparent;
}

.c0 {
  width: 168px;
}

.c0 .sc-fujyAs {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .sc-carFqZ {
  display: none;
}

.c0 .RcTextFieldInput-focused .sc-carFqZ {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c1 .RcSelect-icon {
  color: #666666;
}

.c1 .RcSelectInput-focused .RcSelect-icon {
  color: #066FAC;
}

.c1 .RcSelectInput-error .RcSelect-icon {
  color: #BE3933;
}

.c1 .RcSelectInputWhenPlaceholder-input {
  color: #757575;
}

.c1 .RcSelectInputWhenPlaceholder-input:before {
  content: 'undefined';
  border: none;
}

.c1 .RcSelectInput-disabled {
  color: #B9B9B9;
}

.c1 .RcSelectInput-disabled .RcSelect-icon {
  color: #B9B9B9;
}

.c2 .c3 .c5 {
  margin-right: 0;
}

.c2 .sc-dvXYtj {
  margin-right: 0;
}

.c2 .RcTextField-root {
  margin-bottom: 0;
}

.c2 .RcPlainSelectInput-root {
  width: auto;
  pointer-events: none;
}

.c2 .RcPlainSelectInput-input {
  padding: 0;
  height: auto;
}

.c2 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 16px;
  padding-right: 4px;
}

.c2 .c3 .{
  margin: 0px 0px 0px 4px;
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .sc-carFqZ {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
  className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2"
>
  <div
    className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcSelectInput-root RcPlainSelectInput-root MuiInputBase-formControl MuiInput-formControl"
    data-test-automation-id="demo"
    onClick={[Function]}
  >
    <div
      className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input RcTextFieldInput-input RcPlainSelectInput-input"
      onBlur={[Function]}
      onFocus={[Function]}
      onKeyDown={[Function]}
      onMouseDown={[Function]}
    >
      <button
        aria-haspopup="listbox"
        aria-label="open menu"
        className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4"
        disabled={false}
        onBlur={[Function]}
        onDragLeave={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        tabIndex={0}
        type="button"
      >
        <span
          className="MuiButton-label"
        >
          One
          <span
            className="c5 c6 MuiSvgIcon-root arrow-down icon"
          >
            <svg
              className="c7"
              viewBox="0 0 32 32"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M16.707 20.293l5.586-5.586A.999.999 0 0021.586 13H10.414a1 1 0 00-.707 1.707l5.586 5.586a.999.999 0 001.414 0z"
              />
            </svg>
            
          </span>
        </span>
        <span
          className="MuiTouchRipple-root RcPlainSelect-TouchRipple-root"
        />
      </button>
    </div>
    <input
      aria-hidden={true}
      autoFocus={false}
      className="MuiSelect-nativeInput"
      disabled={false}
      onAnimationStart={[Function]}
      onChange={[Function]}
      required={false}
      tabIndex={-1}
      value={1}
      variant="standard"
    />
  </div>
</div>
`;

exports[`Storyshots ðŸš€ Cleanup Components/Selects/PlainSelect PlainSelect Examples 1`] = `
Array [
  .c0 {
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: #666666;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<p
    className="MuiTypography-root c0"
    data-color="neutral.f04"
    data-variant="body1"
  >
    text
  </p>,
  .c7 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c4 {
  text-transform: none;
  font-size: 0.9375rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  min-width: 88px;
  min-height: 32px;
  padding: 0px 12px;
}

.c4 .RcButton-startIcon {
  margin-right: 8px;
}

.c4 .RcButton-endIcon {
  margin-left: 8px;
}

.c4.RcButton-text {
  color: #066FAC;
}

.c4.RcButton-text.RcButton-disabled {
  color: #B9B9B9;
}

.c4.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c4.RcButton-contained.RcButton-disabled {
  background-color: #B9B9B9;
  color: #FFFFFF;
}

.c4.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 11px;
}

.c4.RcButton-outlined.RcButton-disabled {
  color: #B9B9B9;
  border-color: #B9B9B9;
}

.c4.RcButton-outlined:after {
  top: -1px;
  bottom: -1px;
  left: -1px;
  right: -1px;
  border: 1px solid transparent;
}

.c0 {
  width: 168px;
}

.c0 .sc-fujyAs {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .sc-carFqZ {
  display: none;
}

.c0 .RcTextFieldInput-focused .sc-carFqZ {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c10 > .sc-fujyAs,
.c10 > .c5 {
  margin-right: 8px;
}

.c1 .RcSelect-icon {
  color: #666666;
}

.c1 .RcSelectInput-focused .RcSelect-icon {
  color: #066FAC;
}

.c1 .RcSelectInput-error .RcSelect-icon {
  color: #BE3933;
}

.c1 .RcSelectInputWhenPlaceholder-input {
  color: #757575;
}

.c1 .RcSelectInputWhenPlaceholder-input:before {
  content: 'undefined';
  border: none;
}

.c1 .RcSelectInput-disabled {
  color: #B9B9B9;
}

.c1 .RcSelectInput-disabled .RcSelect-icon {
  color: #B9B9B9;
}

.c2 .c3 .c5 {
  margin-right: 0;
}

.c2 .c11 {
  margin-right: 0;
}

.c2 .RcTextField-root {
  margin-bottom: 0;
}

.c2 .RcPlainSelectInput-root {
  width: auto;
  pointer-events: none;
}

.c2 .RcPlainSelectInput-input {
  padding: 0;
  height: auto;
}

.c2 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 16px;
  padding-right: 4px;
}

.c2 .c3 .{
  margin: 0px 0px 0px 4px;
}

.c8 .c3 .c5 {
  margin-right: 0;
}

.c8 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 4px;
  padding-right: 0px;
}

.c8 .c3 .{
  margin: 0px 0px 0px 4px;
}

.c9 .c3 .c5 {
  margin-right: 0;
}

.c9 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 4px;
  padding-right: 0px;
  border-radius: 16px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c9 .c3 .{
  margin: 0px 0px 0px 0px;
}

.c9 .c3.focus-visible .RcPlainSelect-TouchRipple-root,
.c9 .c3[data-focus-visible-added] .RcPlainSelect-TouchRipple-root,
.c9 .c3.Mui-focusVisible .RcPlainSelect-TouchRipple-root {
  background-color: currentColor;
  opacity: 0.32;
}

.c9 .c3.focus-visible .RcPlainSelect-TouchRipple-child,
.c9 .c3[data-focus-visible-added] .RcPlainSelect-TouchRipple-child,
.c9 .c3.Mui-focusVisible .RcPlainSelect-TouchRipple-child {
  display: none;
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .sc-carFqZ {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2"
  >
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcSelectInput-root RcPlainSelectInput-root MuiInputBase-formControl MuiInput-formControl"
      onClick={[Function]}
    >
      <div
        className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input RcTextFieldInput-input RcPlainSelectInput-input"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
      >
        <button
          aria-haspopup="listbox"
          aria-label="open menu"
          className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4"
          disabled={false}
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          type="button"
        >
          <span
            className="MuiButton-label"
          >
            One
            <span
              className="c5 c6 MuiSvgIcon-root arrow-down icon"
            >
              <svg
                className="c7"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16.707 20.293l5.586-5.586A.999.999 0 0021.586 13H10.414a1 1 0 00-.707 1.707l5.586 5.586a.999.999 0 001.414 0z"
                />
              </svg>
              
            </span>
          </span>
          <span
            className="MuiTouchRipple-root RcPlainSelect-TouchRipple-root"
          />
        </button>
      </div>
      <input
        aria-hidden={true}
        autoFocus={false}
        className="MuiSelect-nativeInput"
        disabled={false}
        onAnimationStart={[Function]}
        onChange={[Function]}
        required={false}
        tabIndex={-1}
        value={1}
        variant="standard"
      />
    </div>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: #666666;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<p
    className="MuiTypography-root c0"
    data-color="neutral.f04"
    data-variant="body1"
  >
    plain
  </p>,
  .c8 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c7 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c4 {
  text-transform: none;
  font-size: 0.9375rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
}

.c4 .RcButton-startIcon {
  margin-right: 8px;
  margin-left: 0;
}

.c4 .RcButton-endIcon {
  margin-left: 8px;
  margin-right: 0;
}

.c4.RcButton-text {
  color: #066FAC;
  padding: 4px;
  min-width: unset;
  line-height: 1;
}

.c4.RcButton-text.RcButton-disabled {
  color: #B9B9B9;
}

.c4.RcButton-text.focus-visible,
.c4.RcButton-text[data-focus-visible-added] {
  box-shadow: inset 0 0 0 1px #066FAC;
}

.c4.RcButton-text:active.RcButton-text {
  color: rgba(6,111,172,0.64);
}

.c4.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c4.RcButton-contained.RcButton-disabled {
  background-color: #B9B9B9;
  color: #FFFFFF;
}

.c4.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 11px;
}

.c4.RcButton-outlined.RcButton-disabled {
  color: #B9B9B9;
  border-color: #B9B9B9;
}

.c4.RcButton-outlined:after {
  top: -1px;
  bottom: -1px;
  left: -1px;
  right: -1px;
  border: 1px solid transparent;
}

.c0 {
  width: 168px;
}

.c0 .sc-fujyAs {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .sc-carFqZ {
  display: none;
}

.c0 .RcTextFieldInput-focused .sc-carFqZ {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: auto;
  height: unset;
  color: inherit;
  min-width: unset;
}

.c5 > .sc-ckTSus,
.c5 > .sc-gGLxEB {
  margin-right: 4px;
}

.c5 > .sc-hhIiOg {
  margin-left: 4px;
  margin-right: 4px;
}

.c5 > .sc-fujyAs,
.c5 > .c6 {
  margin-right: 8px;
}

.c10 {
  padding: 0;
  margin: 0 8px 0 0;
}

.c10.RcListItemText-multiline {
  margin: 4px 8px 4px 0px;
}

.c10.RcListItemText-inset {
  padding-left: 56px;
}

.c10 .RcListItemText-primary {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-text-decoration-line: inherit;
  text-decoration-line: inherit;
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: inherit;
}

.c10 .RcListItemText-secondary {
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -webkit-text-decoration-line: inherit;
  text-decoration-line: inherit;
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c1 .RcSelect-icon {
  color: #666666;
}

.c1 .RcSelectInput-focused .RcSelect-icon {
  color: #066FAC;
}

.c1 .RcSelectInput-error .RcSelect-icon {
  color: #BE3933;
}

.c1 .RcSelectInputWhenPlaceholder-input {
  color: #757575;
}

.c1 .RcSelectInputWhenPlaceholder-input:before {
  content: 'undefined';
  border: none;
}

.c1 .RcSelectInput-disabled {
  color: #B9B9B9;
}

.c1 .RcSelectInput-disabled .RcSelect-icon {
  color: #B9B9B9;
}

.c11 .c3 .c6 {
  margin-right: 0;
}

.c11 .c9 {
  margin-right: 0;
}

.c11 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 16px;
  padding-right: 4px;
}

.c11 .c3 .{
  margin: 0px 0px 0px 4px;
}

.c2 .c3 .c6 {
  margin-right: 0;
}

.c2 .c9 {
  margin-right: 0;
}

.c2 .RcTextField-root {
  margin-bottom: 0;
}

.c2 .RcPlainSelectInput-root {
  width: auto;
  pointer-events: none;
}

.c2 .RcPlainSelectInput-input {
  padding: 0;
  height: auto;
}

.c2 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 4px;
  padding-right: 0px;
}

.c2 .c3 .{
  margin: 0px 0px 0px 4px;
}

.c12 .c3 .c6 {
  margin-right: 0;
}

.c12 .c9 {
  margin-right: 0;
}

.c12 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 4px;
  padding-right: 0px;
  border-radius: 16px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c12 .c3 .{
  margin: 0px 0px 0px 0px;
}

.c12 .c3.focus-visible .RcPlainSelect-TouchRipple-root,
.c12 .c3[data-focus-visible-added] .RcPlainSelect-TouchRipple-root,
.c12 .c3.Mui-focusVisible .RcPlainSelect-TouchRipple-root {
  background-color: currentColor;
  opacity: 0.32;
}

.c12 .c3.focus-visible .RcPlainSelect-TouchRipple-child,
.c12 .c3[data-focus-visible-added] .RcPlainSelect-TouchRipple-child,
.c12 .c3.Mui-focusVisible .RcPlainSelect-TouchRipple-child {
  display: none;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-text:hover {
    color: rgba(6,111,172,0.8);
    background-color: transparent;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .sc-carFqZ {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2"
  >
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcSelectInput-root RcPlainSelectInput-root MuiInputBase-formControl MuiInput-formControl"
      onClick={[Function]}
    >
      <div
        className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input RcTextFieldInput-input RcPlainSelectInput-input"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
      >
        <button
          aria-haspopup="listbox"
          aria-label="open menu"
          className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4"
          disabled={false}
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          type="button"
        >
          <span
            className="MuiButton-label"
          >
            <div
              className="MuiListItemIcon-root c5"
            >
              <span
                className="c6 c7 bubble_lines_border icon"
              >
                <svg
                  className="c8"
                  viewBox="0 0 32 32"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <path
                    d="M22 9a2 2 0 012 2v12a2 2 0 01-2 2h-4.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141A1 1 0 008.587 25H4.001a2 2 0 01-2-2V11a2 2 0 012-2h18zm-1 2H5a1 1 0 00-1 1v10a1 1 0 001 1h4a2 2 0 011.414.586L13 26.172l2.586-2.586A2 2 0 0117 23h4a1 1 0 001-1V12a1 1 0 00-1-1zm7-8a2 2 0 012 2v12a2 2 0 01-2 2h-3v-2h2a1 1 0 001-1V6a1 1 0 00-1-1H11a1 1 0 00-1 1v2H8V5a2 2 0 012-2h18z"
                  />
                </svg>
                
              </span>
            </div>
            <div
              className="MuiListItemText-root c9 c10"
            >
              <span
                className="MuiTypography-root MuiListItemText-primary RcListItemText-primary MuiTypography-body1 MuiTypography-displayBlock"
              >
                One
              </span>
            </div>
            <span
              className="c6 c7 MuiSvgIcon-root arrow-down icon"
            >
              <svg
                className="c8"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16.707 20.293l5.586-5.586A.999.999 0 0021.586 13H10.414a1 1 0 00-.707 1.707l5.586 5.586a.999.999 0 001.414 0z"
                />
              </svg>
              
            </span>
          </span>
        </button>
      </div>
      <input
        aria-hidden={true}
        autoFocus={false}
        className="MuiSelect-nativeInput"
        disabled={false}
        onAnimationStart={[Function]}
        onChange={[Function]}
        required={false}
        tabIndex={-1}
        value={1}
        variant="standard"
      />
    </div>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: #666666;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<p
    className="MuiTypography-root c0"
    data-color="neutral.f04"
    data-variant="body1"
  >
    round
  </p>,
  .c7 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c4 {
  text-transform: none;
  font-size: 0.9375rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
  min-width: 88px;
  min-height: 32px;
  padding: 0px 12px;
}

.c4 .RcButton-startIcon {
  margin-right: 8px;
}

.c4 .RcButton-endIcon {
  margin-left: 8px;
}

.c4.RcButton-text {
  color: #066FAC;
}

.c4.RcButton-text.RcButton-disabled {
  color: #B9B9B9;
}

.c4.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c4.RcButton-contained.RcButton-disabled {
  background-color: #B9B9B9;
  color: #FFFFFF;
}

.c4.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 11px;
}

.c4.RcButton-outlined.RcButton-disabled {
  color: #B9B9B9;
  border-color: #B9B9B9;
}

.c4.RcButton-outlined:after {
  top: -1px;
  bottom: -1px;
  left: -1px;
  right: -1px;
  border: 1px solid transparent;
}

.c0 {
  width: 168px;
}

.c0 .sc-fujyAs {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .sc-carFqZ {
  display: none;
}

.c0 .RcTextFieldInput-focused .sc-carFqZ {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c10 > .sc-fujyAs,
.c10 > .c5 {
  margin-right: 8px;
}

.c1 .RcSelect-icon {
  color: #666666;
}

.c1 .RcSelectInput-focused .RcSelect-icon {
  color: #066FAC;
}

.c1 .RcSelectInput-error .RcSelect-icon {
  color: #BE3933;
}

.c1 .RcSelectInputWhenPlaceholder-input {
  color: #757575;
}

.c1 .RcSelectInputWhenPlaceholder-input:before {
  content: 'undefined';
  border: none;
}

.c1 .RcSelectInput-disabled {
  color: #B9B9B9;
}

.c1 .RcSelectInput-disabled .RcSelect-icon {
  color: #B9B9B9;
}

.c8 .c3 .c5 {
  margin-right: 0;
}

.c8 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 16px;
  padding-right: 4px;
}

.c8 .c3 .{
  margin: 0px 0px 0px 4px;
}

.c9 .c3 .c5 {
  margin-right: 0;
}

.c9 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 4px;
  padding-right: 0px;
}

.c9 .c3 .{
  margin: 0px 0px 0px 4px;
}

.c2 .c3 .c5 {
  margin-right: 0;
}

.c2 .c11 {
  margin-right: 0;
}

.c2 .RcTextField-root {
  margin-bottom: 0;
}

.c2 .RcPlainSelectInput-root {
  width: auto;
  pointer-events: none;
}

.c2 .RcPlainSelectInput-input {
  padding: 0;
  height: auto;
}

.c2 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 4px;
  padding-right: 0px;
  border-radius: 16px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c2 .c3 .{
  margin: 0px 0px 0px 0px;
}

.c2 .c3.focus-visible .RcPlainSelect-TouchRipple-root,
.c2 .c3[data-focus-visible-added] .RcPlainSelect-TouchRipple-root,
.c2 .c3.Mui-focusVisible .RcPlainSelect-TouchRipple-root {
  background-color: currentColor;
  opacity: 0.32;
}

.c2 .c3.focus-visible .RcPlainSelect-TouchRipple-child,
.c2 .c3[data-focus-visible-added] .RcPlainSelect-TouchRipple-child,
.c2 .c3.Mui-focusVisible .RcPlainSelect-TouchRipple-child {
  display: none;
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .sc-carFqZ {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2"
  >
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcSelectInput-root RcPlainSelectInput-root MuiInputBase-formControl MuiInput-formControl"
      onClick={[Function]}
    >
      <div
        className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input RcTextFieldInput-input RcPlainSelectInput-input"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
      >
        <button
          aria-haspopup="listbox"
          aria-label="open menu"
          className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4"
          disabled={false}
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          type="button"
        >
          <span
            className="MuiButton-label"
          >
            <span
              className="c5 c6 bubble_lines_border icon"
            >
              <svg
                className="c7"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M22 9a2 2 0 012 2v12a2 2 0 01-2 2h-4.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141A1 1 0 008.587 25H4.001a2 2 0 01-2-2V11a2 2 0 012-2h18zm-1 2H5a1 1 0 00-1 1v10a1 1 0 001 1h4a2 2 0 011.414.586L13 26.172l2.586-2.586A2 2 0 0117 23h4a1 1 0 001-1V12a1 1 0 00-1-1zm7-8a2 2 0 012 2v12a2 2 0 01-2 2h-3v-2h2a1 1 0 001-1V6a1 1 0 00-1-1H11a1 1 0 00-1 1v2H8V5a2 2 0 012-2h18z"
                />
              </svg>
              
            </span>
            <span
              className="c5 c6 MuiSvgIcon-root arrow-down icon"
            >
              <svg
                className="c7"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16.707 20.293l5.586-5.586A.999.999 0 0021.586 13H10.414a1 1 0 00-.707 1.707l5.586 5.586a.999.999 0 001.414 0z"
                />
              </svg>
              
            </span>
          </span>
          <span
            className="MuiTouchRipple-root RcPlainSelect-TouchRipple-root"
          />
        </button>
      </div>
      <input
        aria-hidden={true}
        autoFocus={false}
        className="MuiSelect-nativeInput"
        disabled={false}
        onAnimationStart={[Function]}
        onChange={[Function]}
        required={false}
        tabIndex={-1}
        value={1}
        variant="standard"
      />
    </div>
  </div>,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  @media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<br />,
  .c0 {
  font-size: 0.9375rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 22px;
  color: #666666;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

<p
    className="MuiTypography-root c0"
    data-color="neutral.f04"
    data-variant="body1"
  >
    plainIcon
  </p>,
  .c7 {
  width: 1em;
  height: 1em;
  stroke-width: 0;
  stroke: currentColor;
  fill: currentColor;
  pointer-events: none;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: 24px;
}

.c4 {
  text-transform: none;
  font-size: 0.9375rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  text-align: center;
  box-shadow: unset;
}

.c4 .RcButton-startIcon {
  margin-right: 8px;
  margin-left: 0;
}

.c4 .RcButton-endIcon {
  margin-left: 8px;
  margin-right: 0;
}

.c4.RcButton-text {
  color: #066FAC;
  padding: 4px;
  min-width: unset;
  line-height: 1;
}

.c4.RcButton-text.RcButton-disabled {
  color: #B9B9B9;
}

.c4.RcButton-text.focus-visible,
.c4.RcButton-text[data-focus-visible-added] {
  box-shadow: inset 0 0 0 1px #066FAC;
}

.c4.RcButton-text:active.RcButton-text {
  color: rgba(6,111,172,0.64);
}

.c4.RcButton-contained {
  color: #fff;
  background-color: #066FAC;
}

.c4.RcButton-contained.RcButton-disabled {
  background-color: #B9B9B9;
  color: #FFFFFF;
}

.c4.RcButton-outlined {
  color: #066FAC;
  border-color: #066FAC;
  padding: 0px 11px;
}

.c4.RcButton-outlined.RcButton-disabled {
  color: #B9B9B9;
  border-color: #B9B9B9;
}

.c4.RcButton-outlined:after {
  top: -1px;
  bottom: -1px;
  left: -1px;
  right: -1px;
  border: 1px solid transparent;
}

.c0 {
  width: 168px;
}

.c0 .sc-fujyAs {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .sc-carFqZ {
  display: none;
}

.c0 .RcTextFieldInput-focused .sc-carFqZ {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c0 .RcTextFieldInput-input {
  font-size: 1rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 24px;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error,
.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled,
.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

.c10 > .sc-fujyAs,
.c10 > .c5 {
  margin-right: 8px;
}

.c1 .RcSelect-icon {
  color: #666666;
}

.c1 .RcSelectInput-focused .RcSelect-icon {
  color: #066FAC;
}

.c1 .RcSelectInput-error .RcSelect-icon {
  color: #BE3933;
}

.c1 .RcSelectInputWhenPlaceholder-input {
  color: #757575;
}

.c1 .RcSelectInputWhenPlaceholder-input:before {
  content: 'undefined';
  border: none;
}

.c1 .RcSelectInput-disabled {
  color: #B9B9B9;
}

.c1 .RcSelectInput-disabled .RcSelect-icon {
  color: #B9B9B9;
}

.c8 .c3 .c5 {
  margin-right: 0;
}

.c8 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 16px;
  padding-right: 4px;
}

.c8 .c3 .{
  margin: 0px 0px 0px 4px;
}

.c9 .c3 .c5 {
  margin-right: 0;
}

.c9 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 4px;
  padding-right: 0px;
}

.c9 .c3 .{
  margin: 0px 0px 0px 4px;
}

.c2 .c3 .c5 {
  margin-right: 0;
}

.c2 .c11 {
  margin-right: 0;
}

.c2 .RcTextField-root {
  margin-bottom: 0;
}

.c2 .RcPlainSelectInput-root {
  width: auto;
  pointer-events: none;
}

.c2 .RcPlainSelectInput-input {
  padding: 0;
  height: auto;
}

.c2 .c3 {
  pointer-events: auto;
  min-width: unset;
  padding-left: 4px;
  padding-right: 0px;
  border-radius: 16px;
  padding-top: 6px;
  padding-bottom: 6px;
}

.c2 .c3 .{
  margin: 0px 0px 0px 0px;
}

.c2 .c3.focus-visible .RcPlainSelect-TouchRipple-root,
.c2 .c3[data-focus-visible-added] .RcPlainSelect-TouchRipple-root,
.c2 .c3.Mui-focusVisible .RcPlainSelect-TouchRipple-root {
  background-color: currentColor;
  opacity: 0.32;
}

.c2 .c3.focus-visible .RcPlainSelect-TouchRipple-child,
.c2 .c3[data-focus-visible-added] .RcPlainSelect-TouchRipple-child,
.c2 .c3.Mui-focusVisible .RcPlainSelect-TouchRipple-child {
  display: none;
}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {

}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-text:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-text:hover {
    color: rgba(6,111,172,0.8);
    background-color: transparent;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-contained:hover {
    background-color: rgba(6,111,172,0.92);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c4.RcButton-outlined:hover {
    background-color: rgba(6,111,172,0.08);
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-root:hover:not(.RcTextFieldInput-disabled) .sc-carFqZ {
    display: -webkit-inline-box;
    display: -webkit-inline-flex;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
    className="MuiFormControl-root MuiTextField-root RcTextField-root c0 c1 c2"
  >
    <div
      className="MuiInputBase-root MuiInput-root RcTextFieldInput-root RcSelectInput-root RcPlainSelectInput-root MuiInputBase-formControl MuiInput-formControl"
      onClick={[Function]}
    >
      <div
        className="MuiSelect-root MuiSelect-select MuiSelect-selectMenu MuiInputBase-input MuiInput-input RcTextFieldInput-input RcPlainSelectInput-input"
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onMouseDown={[Function]}
      >
        <button
          aria-haspopup="listbox"
          aria-label="open menu"
          className="MuiButtonBase-root MuiButton-root MuiButton-text RcButton-text c3 c4"
          disabled={false}
          onBlur={[Function]}
          onDragLeave={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          tabIndex={0}
          type="button"
        >
          <span
            className="MuiButton-label"
          >
            <span
              className="c5 c6 bubble_lines_border icon"
            >
              <svg
                className="c7"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M22 9a2 2 0 012 2v12a2 2 0 01-2 2h-4.586a.997.997 0 00-.707.293l-3.141 3.141a.8.8 0 01-1.131 0l-3.141-3.141A1 1 0 008.587 25H4.001a2 2 0 01-2-2V11a2 2 0 012-2h18zm-1 2H5a1 1 0 00-1 1v10a1 1 0 001 1h4a2 2 0 011.414.586L13 26.172l2.586-2.586A2 2 0 0117 23h4a1 1 0 001-1V12a1 1 0 00-1-1zm7-8a2 2 0 012 2v12a2 2 0 01-2 2h-3v-2h2a1 1 0 001-1V6a1 1 0 00-1-1H11a1 1 0 00-1 1v2H8V5a2 2 0 012-2h18z"
                />
              </svg>
              
            </span>
            <span
              className="c5 c6 MuiSvgIcon-root arrow-down icon"
            >
              <svg
                className="c7"
                viewBox="0 0 32 32"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M16.707 20.293l5.586-5.586A.999.999 0 0021.586 13H10.414a1 1 0 00-.707 1.707l5.586 5.586a.999.999 0 001.414 0z"
                />
              </svg>
              
            </span>
          </span>
        </button>
      </div>
      <input
        aria-hidden={true}
        autoFocus={false}
        className="MuiSelect-nativeInput"
        disabled={false}
        onAnimationStart={[Function]}
        onChange={[Function]}
        required={false}
        tabIndex={-1}
        value={1}
        variant="standard"
      />
    </div>
  </div>,
]
`;
