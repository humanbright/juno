// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots ðŸš€ Cleanup Components/Forms/BorderLessTextField BorderLessTextField 1`] = `
.c0 .sc-pNWxx {
  margin-left: 12px;
}

.c0 .RcTextFieldInputLabel-root {
  font-size: 0.75rem;
  font-weight: 700;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.c0 .RcTextFieldInputLabel-focused {
  color: #066FAC;
}

.c0 .RcTextFieldInput-root {
  color: #121212;
}

.c0 .RcTextFieldInput-root .sc-laZMyp {
  display: none;
}

.c0 .RcTextFieldInput-input {
  font-size: 2.125rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 40px;
  text-align: center;
}

.c0 .RcTextFieldInput-input::-webkit-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::-moz-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input:-ms-input-placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-input::placeholder {
  color: #757575;
  opacity: 1;
}

.c0 .RcTextFieldInput-underline:before {
  border-bottom-color: #939393;
}

.c0 .RcTextFieldInput-underline:after {
  border-bottom-color: #066FAC;
}

.c0 .RcTextFieldInput-error:after {
  border-bottom-color: #BE3933;
}

.c0 .RcTextFieldInput-disabled {
  color: #B9B9B9;
  -webkit-text-fill-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-webkit-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::-moz-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:-ms-input-placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled::placeholder {
  color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:before {
  border-bottom-style: solid;
  border-bottom-color: #B9B9B9;
}

.c0 .RcTextFieldInput-disabled:after {
  border-bottom-style: none;
}

.c0 .RcTextFieldFormHelperText-root {
  font-size: 0.75rem;
  font-weight: 400;
  font-family: Lato,Helvetica,Arial,sans-serif;
  line-height: 16px;
  color: #666666;
}

.c0 .RcTextFieldFormHelperText-error {
  color: #BE3933;
}

.c0 .RcTextFieldFormHelperText-disabled {
  color: #B9B9B9;
}

.c0 .RcTextFieldInputLabel-error {
  color: #BE3933;
}

.c0 .RcTextFieldInputLabel-disabled {
  color: #B9B9B9;
}

.c0 input[type='search']::-ms-clear,
.c0 input[type='search']::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}

.c0 input[type='search']::-webkit-search-decoration,
.c0 input[type='search']::-webkit-search-cancel-button,
.c0 input[type='search']::-webkit-search-results-button,
.c0 input[type='search']::-webkit-search-results-decoration {
  display: none;
}

@media (hover:hover) and (pointer:fine) {
  .c0 .RcTextFieldInput-underline:hover:not(.RcTextFieldInput-disabled):before {
    border-bottom-color: #121212;
  }
}

<div
  className="MuiFormControl-root MuiTextField-root RcTextField-root c0 MuiFormControl-fullWidth"
>
  <div
    className="MuiInputBase-root MuiInput-root RcTextFieldInput-root MuiInputBase-fullWidth MuiInput-fullWidth MuiInputBase-formControl MuiInput-formControl MuiInputBase-multiline MuiInput-multiline"
    onClick={[Function]}
  >
    <textarea
      aria-invalid={false}
      autoFocus={false}
      className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
      disabled={false}
      id="id-BorderLessTextField-1"
      onAnimationStart={[Function]}
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      placeholder="title"
      required={false}
      rows={1}
      style={
        Object {
          "height": -4,
          "overflow": "hidden",
        }
      }
    />
    <textarea
      aria-hidden={true}
      className="MuiInputBase-input MuiInput-input RcTextFieldInput-input MuiInputBase-inputMultiline MuiInput-inputMultiline"
      readOnly={true}
      style={
        Object {
          "height": 0,
          "left": 0,
          "overflow": "hidden",
          "position": "absolute",
          "top": 0,
          "transform": "translateZ(0)",
          "visibility": "hidden",
        }
      }
      tabIndex={-1}
    />
  </div>
</div>
`;
